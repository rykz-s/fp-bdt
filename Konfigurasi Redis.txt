###### Master ######
sudo apt update
sudo apt install redis-server
sudo nano /etc/redis/redis.conf (ubah systemd init menjadi systemd)
sudo systemctl restart redis.service
sudo systemctl status redis
.Pengetesan
redis-cli
ping
exit

###### Visual Studio ######
composer require predis/predis

###### config/database.php ######
'redis' => [
	'client' => env('REDIS_CLIENT', 'predis'),

	'options' => [
		'cluster' => env('REDIS_CLUSTER', 'redis'),
		'prefix' => env('REDIS_PREFIX', Str::slug(env('APP_NAME', 'laravel'), '_').'_database_'),
	],

	'default' => [
		'url' => env('REDIS_URL'),
		'host' => env('REDIS_HOST', '127.0.0.1'),
		'password' => env('REDIS_PASSWORD', null),
		'port' => env('REDIS_PORT', '6379'),
		'database' => env('REDIS_DB', '0'),
	],

	'cache' => [
		'url' => env('REDIS_URL'),
		'host' => env('REDIS_HOST', '127.0.0.1'),
		'password' => env('REDIS_PASSWORD', null),
		'port' => env('REDIS_PORT', '6379'),
		'database' => env('REDIS_DB', '1'),
	],
],

###### .env ###### 
REDIS_CLIENT=predis
REDIS_HOST=127.0.0.1
REDIS_PASSWORD=
REDIS_PORT=6379

###### TaksonomiBloomController ######
<?php

namespace App\Http\Controllers;

use App\Http\Requests\Taksonomi\CreateTaksonomiRequest;
use App\Services\TaksonomiService;
use Illuminate\Http\Request;
use Illuminate\Support\Facades\Redis;
use Illuminate\Support\Facades\DB;
use Illuminate\Support\Facades\Cache;

class TaksonomiBloomController extends Controller
{
    protected $taksonomiService;

    public function __construct(TaksonomiService $taksonomiService)
    {
        $this->taksonomiService = $taksonomiService;
    }

    public function index()
    {
        try {
            $redis = cache::remember('hai', 6000, function () {
                return DB::table('taksonomis')->get();
            });
// dd($redis);
            Redis::set('some-key', 'test');
            $test = Redis::get('some-key');
dd($test);
            $data['remembers'] = $this->taksonomiService->getAll('remember');
            $data['understands'] = $this->taksonomiService->getAll('understand');
            $data['applys'] = $this->taksonomiService->getAll('apply');
            $data['analyzes'] = $this->taksonomiService->getAll('analyze');
            $data['evaluates'] = $this->taksonomiService->getAll('evaluate');
            $data['creates'] = $this->taksonomiService->getAll('create');
            return view('admin.taksonomi.index', $data);
        } catch (Exception $e) {
            return $this->handleException($e);
        }
    }

    public function viewCreate($role)
    {
        try {
            $data['role'] = $role;

            return view('admin.taksonomi.create', $data);
        } catch (Exception $e) {
            return $this->handleException($e);
        }
    }

    public function store(CreateTaksonomiRequest $request)
    {
        try {
            $this->taksonomiService->create($request->validated());

            return redirect('admin/taksonomi-bloom');
        } catch (Exception $e) {
            return $this->handleException($e);
        }
    }

    public function delete($id)
    {
        try {
            $this->taksonomiService->delete($id);

            return redirect('admin/taksonomi-bloom');
        } catch (Exception $e) {
            return $this->handleException($e);
        }
    }
}